Github and git    vcs/scm version control system/source code mangement 
git work flow
working area ==== new files ,modified files in red colour 
index/staging area ==== git add. git add* git add file name 
local repository ===== git commit -m "meassege"
remote ===== git push orgin(url)  master(defalt branch)
vcs =version control system = 2 major problem 1) sharing of code 2)versioning

vertion contorl 
cvs,svn= centralized
git=disributed ,fork

git = open source ,downlod from ec2 instance 
github=usability, isses ,commenting,reviewing ,project tracking 

types ,bitbuket, gitlab
open source tool - it means it is free 
source code versining system 

source code -set of lines or programing language 

local repository  - in our michen =======git
Remote repository -centralalized SCM - distributed vertion system ===github==== owned my microsoft git hub is cloudhosting platform 
# List global configuration for the current user in windows 
git config --global --list
# Set the name and email to the git global configuration
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
# To Verify the previous commands
git config --global --list
git --version

=======git======
to install git search in crome download git for windows ,linux ,mac 
in linux = ubantu =apt-get install git, fedora = yum install git,

we can do in two way to prcatice in aws vm= install git = and type git it showes the all commands git supports
download in windows and open one emty folder and open with git bash and type git it will show the all commands which supports
======commands===== 
git init   =intialize emty repository 
ls -la     =hiden file to check the emty git created r not 
.
..
.git       =it is hiden file it trakes by this .git  to all repositories 
ls .git    =to see what and all present inside .git 
HEAD  config  description  hooks/  info/  objects/  refs/

everthing it track as =objects 
hooks= prevent unintetinally creating api tooken
config = confic cetificates ,etc

git status 
gives status of intraked files 

git add . =trakes all the files 
git add (repo name) =trakes perticular file 
git diff   === gives difference b/w file changes =if file alredy tracked and others made changes and and not tracked files than showes difference

git commit -m "this is my 1st v1"  == it commites which are files present in .git folder if we not added files to .git folder tha it showes modified filename 
git status 
git add (file name)
git commit -m "v2"
git log  ========= showes both the commits id  what changes had done 
copy commit id to go to that vertion ====  git reset --hard 4fc27bccc89e081fc085cc63e02f34d012376aa4 (commit id)
and cat file  ====== cat git showes that vertion data present
# Check the changes made in each commit
git log -p
#The following prints the commit message alone with commit ID
$ git log --oneline
4fc27bc (HEAD -> master) this is my 1st v1
git pull origin master 
git push origin master 
git fetch origin master  ==========foolowerd by merge command 
git merge only for fetch 
git reset commitid  ===== it will take you to that commit

back wording files 
if file in working are  back from that 
git checkout filename

if it is in stagging back to working ares 
git reset (file name)

how to undo changes in local repo
git log 
git reset commit id 
commit id minimum 5 or 9 

git clean ==== remove untracked files


=================Branching startergie==============
branch is separation 
master branch ===== up to date it should be 
feture branch ====for new feture we create feture branch and work in it insted off working in master branch 
relese branch ===== build and dilviery to relse 
hot/bug fix branches ===== 

git branch  ==== to see how many branches
git branch dev2 ====== to create new branch
git push origin dev2  ====== to push repo in to github
git push origin -d dev3 =====to delete branch
git checkout branch name ===== to go to branch 

=====merging strayegies in locally=====
fast-forward
twoway or ort /recurisive 
git rebases

========fast-forward =======
file =git add.====git commit -m ====git checkout (dev2) === git merge (feture 2)====git checkout master to ===git merge dev2
if we need to merge to dev means go to dev and merge feture 
if we need to merge to master means chgeckout to master and merge dev so it will merge to master from dev

=======twoway or ort /recurisive ====
not used 
git rebase (branch name) (dnagerous )

=====git cherry-pick=======
it picks a commit from one branch and apply to another branch with out doing merge commandgit 
==== cherry-pick commitid 

=====tags ========
tags used to relese application
in locally to see   ===== git tag =====

2 types volatile == temporory  and non vlatile tag ==permanent
from master branch creat tag 
volatile
git tag 0.1 =======to create new tag
git push orgin  0.1 ======to push to remove 
git tag -d v1 ====== to delete
git push -d v1  =====to delete in remote

non valatile tag 
creating on perticular commit 
git log 
after commit 
git tag v1 commit id ===== v1 =tag name 
git push orgin v1 ==== to push to remote 

=====
git stash === temporary save 
unstash
developer ====file =====woking are==index area====brfore going to commit got p1 task 
to save temporty save
== git stash save =======temp save 
=== git stash list ===== list 
unstash 0r git stash popstash id stash 

========merge conflicts =======
locally
2 dev working in same line unable to merge
git merge tool  === to open file
<<<    >>>>> delete save

remote 
find this option ==== mergeconficts  === open file 
<<<<<<    >>>>>> remove brackes 








========to share the code or distributed system  github, self hosted git ,bitbuket
create a github account from google type githublogin======github======
create respositoty and can add files from git hub only are we can push from git to github to copy use fork
git push ===== to push changes from git to github
git uses 2 protocals https and SSH 
in code use url and in git ===== git clone "url" =======it will take all repositeries
https ====use password   ssh ======public key 

git remotr -v ===== need to check configerd git hub r not
# Show available remote upstreams along with their URLs
git remote -v
git remote add "location"
# Adds a remote named origin for the repository at the specified url   
git remote add origin  https://github.com/mycloudazure/gitpractice
#open token to connect to remote repositerty   and copy the tocken and use for 30 dys 
profile settings=devleopersettings=personal access token=token clasic=generare new token fill all and generate 
git token 
https://levelup.gitconnected.com/fix-password-authentication-github-3395e579ce74

pull request  source  and destination 
















